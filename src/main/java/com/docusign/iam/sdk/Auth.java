/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk;

import static com.docusign.iam.sdk.operations.Operations.RequestOperation;
import static com.docusign.iam.sdk.operations.Operations.RequestlessOperation;

import com.docusign.iam.sdk.models.components.ConfidentialAuthCodeGrantRequestBody;
import com.docusign.iam.sdk.models.components.PublicAuthCodeGrantRequestBody;
import com.docusign.iam.sdk.models.operations.AuthorizationCodeGrant;
import com.docusign.iam.sdk.models.operations.GetTokenFromConfidentialAuthCodeRequestBuilder;
import com.docusign.iam.sdk.models.operations.GetTokenFromConfidentialAuthCodeResponse;
import com.docusign.iam.sdk.models.operations.GetTokenFromConfidentialAuthCodeSecurity;
import com.docusign.iam.sdk.models.operations.GetTokenFromJWTGrantRequestBuilder;
import com.docusign.iam.sdk.models.operations.GetTokenFromJWTGrantResponse;
import com.docusign.iam.sdk.models.operations.GetTokenFromPublicAuthCodeRequestBuilder;
import com.docusign.iam.sdk.models.operations.GetTokenFromPublicAuthCodeResponse;
import com.docusign.iam.sdk.models.operations.GetTokenFromRefreshTokenRequestBuilder;
import com.docusign.iam.sdk.models.operations.GetTokenFromRefreshTokenResponse;
import com.docusign.iam.sdk.models.operations.GetTokenFromRefreshTokenSecurity;
import com.docusign.iam.sdk.models.operations.GetUserInfoRequestBuilder;
import com.docusign.iam.sdk.models.operations.GetUserInfoResponse;
import com.docusign.iam.sdk.models.operations.JWTGrant;
import com.docusign.iam.sdk.operations.GetTokenFromConfidentialAuthCode;
import com.docusign.iam.sdk.operations.GetTokenFromJWTGrant;
import com.docusign.iam.sdk.operations.GetTokenFromPublicAuthCode;
import com.docusign.iam.sdk.operations.GetTokenFromRefreshToken;
import com.docusign.iam.sdk.operations.GetUserInfo;
import com.docusign.iam.sdk.utils.Headers;
import com.docusign.iam.sdk.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class Auth {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;

    Auth(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API using the confidential flow.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * You do not need an integration key to obtain an access token.
     * 
     * @return The call builder
     */
    public GetTokenFromConfidentialAuthCodeRequestBuilder getTokenFromConfidentialAuthCode() {
        return new GetTokenFromConfidentialAuthCodeRequestBuilder(sdkConfiguration);
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API using the confidential flow.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param security The security details to use for authentication.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromConfidentialAuthCodeResponse getTokenFromConfidentialAuthCode(ConfidentialAuthCodeGrantRequestBody request, GetTokenFromConfidentialAuthCodeSecurity security) throws Exception {
        return getTokenFromConfidentialAuthCode(request, security, Optional.empty(),
            Optional.empty());
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API using the confidential flow.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param security The security details to use for authentication.
     * @param serverURL Overrides the server URL.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromConfidentialAuthCodeResponse getTokenFromConfidentialAuthCode(
            ConfidentialAuthCodeGrantRequestBody request, GetTokenFromConfidentialAuthCodeSecurity security,
            Optional<String> serverURL, Optional<Options> options) throws Exception {
        RequestOperation<ConfidentialAuthCodeGrantRequestBody, GetTokenFromConfidentialAuthCodeResponse> operation
              = new GetTokenFromConfidentialAuthCode.Sync(
                                    sdkConfiguration, security, serverURL,
                                    options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API using the confidential flow.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * You do not need an integration key to obtain an access token.
     * 
     * @return The call builder
     */
    public GetTokenFromPublicAuthCodeRequestBuilder getTokenFromPublicAuthCode() {
        return new GetTokenFromPublicAuthCodeRequestBuilder(sdkConfiguration);
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API using the confidential flow.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromPublicAuthCodeResponse getTokenFromPublicAuthCode(PublicAuthCodeGrantRequestBody request) throws Exception {
        return getTokenFromPublicAuthCode(request, Optional.empty(), Optional.empty());
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API using the confidential flow.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param serverURL Overrides the server URL.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromPublicAuthCodeResponse getTokenFromPublicAuthCode(
            PublicAuthCodeGrantRequestBody request, Optional<String> serverURL,
            Optional<Options> options) throws Exception {
        RequestOperation<PublicAuthCodeGrantRequestBody, GetTokenFromPublicAuthCodeResponse> operation
              = new GetTokenFromPublicAuthCode.Sync(
                                    sdkConfiguration, serverURL, options,
                                    _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Obtains an access token from the Docusign API using a JWT grant.
     * 
     * <p>Obtains an access token from the Docusign API.
     * 
     * <p>For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * 
     * <p>For the production environment, the URI is https://account.docusign.com/oauth/token
     * 
     * <p>You do not need an integration key to obtain an access token.
     * 
     * @return The call builder
     */
    public GetTokenFromJWTGrantRequestBuilder getTokenFromJwtGrant() {
        return new GetTokenFromJWTGrantRequestBuilder(sdkConfiguration);
    }

    /**
     * Obtains an access token from the Docusign API using a JWT grant.
     * 
     * <p>Obtains an access token from the Docusign API.
     * 
     * <p>For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * 
     * <p>For the production environment, the URI is https://account.docusign.com/oauth/token
     * 
     * <p>You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromJWTGrantResponse getTokenFromJwtGrant(JWTGrant request) throws Exception {
        return getTokenFromJwtGrant(request, Optional.empty(), Optional.empty());
    }

    /**
     * Obtains an access token from the Docusign API using a JWT grant.
     * 
     * <p>Obtains an access token from the Docusign API.
     * 
     * <p>For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * 
     * <p>For the production environment, the URI is https://account.docusign.com/oauth/token
     * 
     * <p>You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param serverURL Overrides the server URL.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromJWTGrantResponse getTokenFromJwtGrant(
            JWTGrant request, Optional<String> serverURL,
            Optional<Options> options) throws Exception {
        RequestOperation<JWTGrant, GetTokenFromJWTGrantResponse> operation
              = new GetTokenFromJWTGrant.Sync(
                                    sdkConfiguration, serverURL, options,
                                    _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * 
     * <p>You do not need an integration key to obtain an access token.
     * 
     * @return The call builder
     */
    public GetTokenFromRefreshTokenRequestBuilder getTokenFromRefreshToken() {
        return new GetTokenFromRefreshTokenRequestBuilder(sdkConfiguration);
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * 
     * <p>You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param security The security details to use for authentication.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromRefreshTokenResponse getTokenFromRefreshToken(AuthorizationCodeGrant request, GetTokenFromRefreshTokenSecurity security) throws Exception {
        return getTokenFromRefreshToken(request, security, Optional.empty(),
            Optional.empty());
    }

    /**
     * Obtains an access token from the Docusign API using an authorization code.
     * 
     * <p>Obtains an access token from the Docusign API.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/token
     * For the production environment, the URI is https://account.docusign.com/oauth/token
     * 
     * <p>You do not need an integration key to obtain an access token.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param security The security details to use for authentication.
     * @param serverURL Overrides the server URL.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTokenFromRefreshTokenResponse getTokenFromRefreshToken(
            AuthorizationCodeGrant request, GetTokenFromRefreshTokenSecurity security,
            Optional<String> serverURL, Optional<Options> options) throws Exception {
        RequestOperation<AuthorizationCodeGrant, GetTokenFromRefreshTokenResponse> operation
              = new GetTokenFromRefreshToken.Sync(
                                    sdkConfiguration, security, serverURL,
                                    options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get user information
     * 
     * <p>This endpoint retrieves user information from the Docusign API using an access token.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/userinfo
     * For the production environment, the URI is https://account.docusign.com/oauth/userinfo
     * 
     * @return The call builder
     */
    public GetUserInfoRequestBuilder getUserInfo() {
        return new GetUserInfoRequestBuilder(sdkConfiguration);
    }

    /**
     * Get user information
     * 
     * <p>This endpoint retrieves user information from the Docusign API using an access token.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/userinfo
     * For the production environment, the URI is https://account.docusign.com/oauth/userinfo
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetUserInfoResponse getUserInfoDirect() throws Exception {
        return getUserInfo(Optional.empty(), Optional.empty());
    }

    /**
     * Get user information
     * 
     * <p>This endpoint retrieves user information from the Docusign API using an access token.
     * For the developer environment, the URI is https://account-d.docusign.com/oauth/userinfo
     * For the production environment, the URI is https://account.docusign.com/oauth/userinfo
     * 
     * @param serverURL Overrides the server URL.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetUserInfoResponse getUserInfo(Optional<String> serverURL, Optional<Options> options) throws Exception {
        RequestlessOperation<GetUserInfoResponse> operation
            = new GetUserInfo.Sync(
                                    sdkConfiguration, serverURL, options,
                                    _headers);
        return operation.handleResponse(operation.doRequest());
    }

}
