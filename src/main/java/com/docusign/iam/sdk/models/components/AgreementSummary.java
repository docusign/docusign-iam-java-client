/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.components;

import com.docusign.iam.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * AgreementSummary
 * 
 * <p>A high-level, AI-generated summary of an agreement document.
 */
public class AgreementSummary {
    /**
     * An AI-generated summary of the agreement. This summary is provided for convenience
     * and may not capture every detail of the original agreement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summary")
    private Optional<String> summary;

    @JsonCreator
    public AgreementSummary(
            @JsonProperty("summary") Optional<String> summary) {
        Utils.checkNotNull(summary, "summary");
        this.summary = summary;
    }
    
    public AgreementSummary() {
        this(Optional.empty());
    }

    /**
     * An AI-generated summary of the agreement. This summary is provided for convenience
     * and may not capture every detail of the original agreement.
     */
    @JsonIgnore
    public Optional<String> summary() {
        return summary;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * An AI-generated summary of the agreement. This summary is provided for convenience
     * and may not capture every detail of the original agreement.
     */
    public AgreementSummary withSummary(String summary) {
        Utils.checkNotNull(summary, "summary");
        this.summary = Optional.ofNullable(summary);
        return this;
    }


    /**
     * An AI-generated summary of the agreement. This summary is provided for convenience
     * and may not capture every detail of the original agreement.
     */
    public AgreementSummary withSummary(Optional<String> summary) {
        Utils.checkNotNull(summary, "summary");
        this.summary = summary;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AgreementSummary other = (AgreementSummary) o;
        return 
            Utils.enhancedDeepEquals(this.summary, other.summary);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            summary);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AgreementSummary.class,
                "summary", summary);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<String> summary = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * An AI-generated summary of the agreement. This summary is provided for convenience
         * and may not capture every detail of the original agreement.
         */
        public Builder summary(String summary) {
            Utils.checkNotNull(summary, "summary");
            this.summary = Optional.ofNullable(summary);
            return this;
        }

        /**
         * An AI-generated summary of the agreement. This summary is provided for convenience
         * and may not capture every detail of the original agreement.
         */
        public Builder summary(Optional<String> summary) {
            Utils.checkNotNull(summary, "summary");
            this.summary = summary;
            return this;
        }

        public AgreementSummary build() {

            return new AgreementSummary(
                summary);
        }

    }
}
