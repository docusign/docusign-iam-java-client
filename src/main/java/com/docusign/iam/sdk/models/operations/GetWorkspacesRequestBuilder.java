/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.operations;

import static com.docusign.iam.sdk.operations.Operations.RequestOperation;

import com.docusign.iam.sdk.SDKConfiguration;
import com.docusign.iam.sdk.operations.GetWorkspaces;
import com.docusign.iam.sdk.utils.Options;
import com.docusign.iam.sdk.utils.RetryConfig;
import com.docusign.iam.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;

public class GetWorkspacesRequestBuilder {

    private String accountId;
    private Optional<Integer> count = Optional.empty();
    private Optional<Integer> startPosition = Optional.empty();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public GetWorkspacesRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public GetWorkspacesRequestBuilder accountId(String accountId) {
        Utils.checkNotNull(accountId, "accountId");
        this.accountId = accountId;
        return this;
    }
                
    public GetWorkspacesRequestBuilder count(int count) {
        Utils.checkNotNull(count, "count");
        this.count = Optional.of(count);
        return this;
    }

    public GetWorkspacesRequestBuilder count(Optional<Integer> count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
        return this;
    }
                
    public GetWorkspacesRequestBuilder startPosition(int startPosition) {
        Utils.checkNotNull(startPosition, "startPosition");
        this.startPosition = Optional.of(startPosition);
        return this;
    }

    public GetWorkspacesRequestBuilder startPosition(Optional<Integer> startPosition) {
        Utils.checkNotNull(startPosition, "startPosition");
        this.startPosition = startPosition;
        return this;
    }
                
    public GetWorkspacesRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public GetWorkspacesRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private GetWorkspacesRequest buildRequest() {

        GetWorkspacesRequest request = new GetWorkspacesRequest(accountId,
            count,
            startPosition);

        return request;
    }

    public GetWorkspacesResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<GetWorkspacesRequest, GetWorkspacesResponse> operation
              = new GetWorkspaces.Sync(sdkConfiguration, options);
        GetWorkspacesRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
