/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.components;

import com.docusign.iam.sdk.utils.SpeakeasyMetadata;
import com.docusign.iam.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;


public class AddWorkspaceUploadRequestDocumentRequest {
    /**
     * The file within the multipart/form-data
     */
    @SpeakeasyMetadata("multipartForm:file,name=file")
    private Optional<? extends AddWorkspaceUploadRequestDocumentRequestFile> file;

    @JsonCreator
    public AddWorkspaceUploadRequestDocumentRequest(
            Optional<? extends AddWorkspaceUploadRequestDocumentRequestFile> file) {
        Utils.checkNotNull(file, "file");
        this.file = file;
    }
    
    public AddWorkspaceUploadRequestDocumentRequest() {
        this(Optional.empty());
    }

    /**
     * The file within the multipart/form-data
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AddWorkspaceUploadRequestDocumentRequestFile> file() {
        return (Optional<AddWorkspaceUploadRequestDocumentRequestFile>) file;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The file within the multipart/form-data
     */
    public AddWorkspaceUploadRequestDocumentRequest withFile(AddWorkspaceUploadRequestDocumentRequestFile file) {
        Utils.checkNotNull(file, "file");
        this.file = Optional.ofNullable(file);
        return this;
    }


    /**
     * The file within the multipart/form-data
     */
    public AddWorkspaceUploadRequestDocumentRequest withFile(Optional<? extends AddWorkspaceUploadRequestDocumentRequestFile> file) {
        Utils.checkNotNull(file, "file");
        this.file = file;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AddWorkspaceUploadRequestDocumentRequest other = (AddWorkspaceUploadRequestDocumentRequest) o;
        return 
            Utils.enhancedDeepEquals(this.file, other.file);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            file);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AddWorkspaceUploadRequestDocumentRequest.class,
                "file", file);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends AddWorkspaceUploadRequestDocumentRequestFile> file = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The file within the multipart/form-data
         */
        public Builder file(AddWorkspaceUploadRequestDocumentRequestFile file) {
            Utils.checkNotNull(file, "file");
            this.file = Optional.ofNullable(file);
            return this;
        }

        /**
         * The file within the multipart/form-data
         */
        public Builder file(Optional<? extends AddWorkspaceUploadRequestDocumentRequestFile> file) {
            Utils.checkNotNull(file, "file");
            this.file = file;
            return this;
        }

        public AddWorkspaceUploadRequestDocumentRequest build() {

            return new AddWorkspaceUploadRequestDocumentRequest(
                file);
        }

    }
}
