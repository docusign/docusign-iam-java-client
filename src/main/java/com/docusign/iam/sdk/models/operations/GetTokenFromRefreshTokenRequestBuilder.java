/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.operations;

import com.docusign.iam.sdk.utils.Options;
import com.docusign.iam.sdk.utils.RetryConfig;
import com.docusign.iam.sdk.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class GetTokenFromRefreshTokenRequestBuilder {

    private AuthorizationCodeGrant request;
    private GetTokenFromRefreshTokenSecurity security;
    private Optional<String> serverURL = Optional.empty();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetTokenFromRefreshToken sdk;

    public GetTokenFromRefreshTokenRequestBuilder(SDKMethodInterfaces.MethodCallGetTokenFromRefreshToken sdk) {
        this.sdk = sdk;
    }

    public GetTokenFromRefreshTokenRequestBuilder request(AuthorizationCodeGrant request) {
        Utils.checkNotNull(request, "request");
        this.request = request;
        return this;
    }

    public GetTokenFromRefreshTokenRequestBuilder security(GetTokenFromRefreshTokenSecurity security) {
        Utils.checkNotNull(security, "security");
        this.security = security;
        return this;
    }
                
    public GetTokenFromRefreshTokenRequestBuilder serverURL(String serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = Optional.of(serverURL);
        return this;
    }

    public GetTokenFromRefreshTokenRequestBuilder serverURL(Optional<String> serverURL) {
        Utils.checkNotNull(serverURL, "serverURL");
        this.serverURL = serverURL;
        return this;
    }
                
    public GetTokenFromRefreshTokenRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public GetTokenFromRefreshTokenRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public GetTokenFromRefreshTokenResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.getTokenFromRefreshToken(
            request,
            security,
            serverURL,
            options);
    }
}
