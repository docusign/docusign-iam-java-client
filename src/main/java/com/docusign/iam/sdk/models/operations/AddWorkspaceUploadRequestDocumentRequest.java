/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.operations;

import com.docusign.iam.sdk.utils.SpeakeasyMetadata;
import com.docusign.iam.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;


public class AddWorkspaceUploadRequestDocumentRequest {
    /**
     * The ID of the account
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=accountId")
    private String accountId;

    /**
     * The ID of the workspace
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=workspaceId")
    private String workspaceId;

    /**
     * The ID of the upload request
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=uploadRequestId")
    private String uploadRequestId;


    @SpeakeasyMetadata("request:mediaType=multipart/form-data")
    private Optional<? extends com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest> addWorkspaceUploadRequestDocumentRequest;

    @JsonCreator
    public AddWorkspaceUploadRequestDocumentRequest(
            String accountId,
            String workspaceId,
            String uploadRequestId,
            Optional<? extends com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest> addWorkspaceUploadRequestDocumentRequest) {
        Utils.checkNotNull(accountId, "accountId");
        Utils.checkNotNull(workspaceId, "workspaceId");
        Utils.checkNotNull(uploadRequestId, "uploadRequestId");
        Utils.checkNotNull(addWorkspaceUploadRequestDocumentRequest, "addWorkspaceUploadRequestDocumentRequest");
        this.accountId = accountId;
        this.workspaceId = workspaceId;
        this.uploadRequestId = uploadRequestId;
        this.addWorkspaceUploadRequestDocumentRequest = addWorkspaceUploadRequestDocumentRequest;
    }
    
    public AddWorkspaceUploadRequestDocumentRequest(
            String accountId,
            String workspaceId,
            String uploadRequestId) {
        this(accountId, workspaceId, uploadRequestId,
            Optional.empty());
    }

    /**
     * The ID of the account
     */
    @JsonIgnore
    public String accountId() {
        return accountId;
    }

    /**
     * The ID of the workspace
     */
    @JsonIgnore
    public String workspaceId() {
        return workspaceId;
    }

    /**
     * The ID of the upload request
     */
    @JsonIgnore
    public String uploadRequestId() {
        return uploadRequestId;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest> addWorkspaceUploadRequestDocumentRequest() {
        return (Optional<com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest>) addWorkspaceUploadRequestDocumentRequest;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ID of the account
     */
    public AddWorkspaceUploadRequestDocumentRequest withAccountId(String accountId) {
        Utils.checkNotNull(accountId, "accountId");
        this.accountId = accountId;
        return this;
    }

    /**
     * The ID of the workspace
     */
    public AddWorkspaceUploadRequestDocumentRequest withWorkspaceId(String workspaceId) {
        Utils.checkNotNull(workspaceId, "workspaceId");
        this.workspaceId = workspaceId;
        return this;
    }

    /**
     * The ID of the upload request
     */
    public AddWorkspaceUploadRequestDocumentRequest withUploadRequestId(String uploadRequestId) {
        Utils.checkNotNull(uploadRequestId, "uploadRequestId");
        this.uploadRequestId = uploadRequestId;
        return this;
    }

    public AddWorkspaceUploadRequestDocumentRequest withAddWorkspaceUploadRequestDocumentRequest(com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest addWorkspaceUploadRequestDocumentRequest) {
        Utils.checkNotNull(addWorkspaceUploadRequestDocumentRequest, "addWorkspaceUploadRequestDocumentRequest");
        this.addWorkspaceUploadRequestDocumentRequest = Optional.ofNullable(addWorkspaceUploadRequestDocumentRequest);
        return this;
    }


    public AddWorkspaceUploadRequestDocumentRequest withAddWorkspaceUploadRequestDocumentRequest(Optional<? extends com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest> addWorkspaceUploadRequestDocumentRequest) {
        Utils.checkNotNull(addWorkspaceUploadRequestDocumentRequest, "addWorkspaceUploadRequestDocumentRequest");
        this.addWorkspaceUploadRequestDocumentRequest = addWorkspaceUploadRequestDocumentRequest;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AddWorkspaceUploadRequestDocumentRequest other = (AddWorkspaceUploadRequestDocumentRequest) o;
        return 
            Utils.enhancedDeepEquals(this.accountId, other.accountId) &&
            Utils.enhancedDeepEquals(this.workspaceId, other.workspaceId) &&
            Utils.enhancedDeepEquals(this.uploadRequestId, other.uploadRequestId) &&
            Utils.enhancedDeepEquals(this.addWorkspaceUploadRequestDocumentRequest, other.addWorkspaceUploadRequestDocumentRequest);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            accountId, workspaceId, uploadRequestId,
            addWorkspaceUploadRequestDocumentRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AddWorkspaceUploadRequestDocumentRequest.class,
                "accountId", accountId,
                "workspaceId", workspaceId,
                "uploadRequestId", uploadRequestId,
                "addWorkspaceUploadRequestDocumentRequest", addWorkspaceUploadRequestDocumentRequest);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String accountId;

        private String workspaceId;

        private String uploadRequestId;

        private Optional<? extends com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest> addWorkspaceUploadRequestDocumentRequest = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The ID of the account
         */
        public Builder accountId(String accountId) {
            Utils.checkNotNull(accountId, "accountId");
            this.accountId = accountId;
            return this;
        }


        /**
         * The ID of the workspace
         */
        public Builder workspaceId(String workspaceId) {
            Utils.checkNotNull(workspaceId, "workspaceId");
            this.workspaceId = workspaceId;
            return this;
        }


        /**
         * The ID of the upload request
         */
        public Builder uploadRequestId(String uploadRequestId) {
            Utils.checkNotNull(uploadRequestId, "uploadRequestId");
            this.uploadRequestId = uploadRequestId;
            return this;
        }


        public Builder addWorkspaceUploadRequestDocumentRequest(com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest addWorkspaceUploadRequestDocumentRequest) {
            Utils.checkNotNull(addWorkspaceUploadRequestDocumentRequest, "addWorkspaceUploadRequestDocumentRequest");
            this.addWorkspaceUploadRequestDocumentRequest = Optional.ofNullable(addWorkspaceUploadRequestDocumentRequest);
            return this;
        }

        public Builder addWorkspaceUploadRequestDocumentRequest(Optional<? extends com.docusign.iam.sdk.models.components.AddWorkspaceUploadRequestDocumentRequest> addWorkspaceUploadRequestDocumentRequest) {
            Utils.checkNotNull(addWorkspaceUploadRequestDocumentRequest, "addWorkspaceUploadRequestDocumentRequest");
            this.addWorkspaceUploadRequestDocumentRequest = addWorkspaceUploadRequestDocumentRequest;
            return this;
        }

        public AddWorkspaceUploadRequestDocumentRequest build() {

            return new AddWorkspaceUploadRequestDocumentRequest(
                accountId, workspaceId, uploadRequestId,
                addWorkspaceUploadRequestDocumentRequest);
        }

    }
}
