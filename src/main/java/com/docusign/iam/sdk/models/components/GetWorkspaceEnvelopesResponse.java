/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.components;

import com.docusign.iam.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;


public class GetWorkspaceEnvelopesResponse {
    /**
     * The summary list of envelopes associated with the workspace
     */
    @JsonInclude(Include.ALWAYS)
    @JsonProperty("envelopes")
    private Optional<? extends List<WorkspaceEnvelopeSummary>> envelopes;

    @JsonCreator
    public GetWorkspaceEnvelopesResponse(
            @JsonProperty("envelopes") Optional<? extends List<WorkspaceEnvelopeSummary>> envelopes) {
        Utils.checkNotNull(envelopes, "envelopes");
        this.envelopes = envelopes;
    }
    
    public GetWorkspaceEnvelopesResponse() {
        this(Optional.empty());
    }

    /**
     * The summary list of envelopes associated with the workspace
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<WorkspaceEnvelopeSummary>> envelopes() {
        return (Optional<List<WorkspaceEnvelopeSummary>>) envelopes;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The summary list of envelopes associated with the workspace
     */
    public GetWorkspaceEnvelopesResponse withEnvelopes(List<WorkspaceEnvelopeSummary> envelopes) {
        Utils.checkNotNull(envelopes, "envelopes");
        this.envelopes = Optional.ofNullable(envelopes);
        return this;
    }


    /**
     * The summary list of envelopes associated with the workspace
     */
    public GetWorkspaceEnvelopesResponse withEnvelopes(Optional<? extends List<WorkspaceEnvelopeSummary>> envelopes) {
        Utils.checkNotNull(envelopes, "envelopes");
        this.envelopes = envelopes;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetWorkspaceEnvelopesResponse other = (GetWorkspaceEnvelopesResponse) o;
        return 
            Utils.enhancedDeepEquals(this.envelopes, other.envelopes);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            envelopes);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetWorkspaceEnvelopesResponse.class,
                "envelopes", envelopes);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends List<WorkspaceEnvelopeSummary>> envelopes = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The summary list of envelopes associated with the workspace
         */
        public Builder envelopes(List<WorkspaceEnvelopeSummary> envelopes) {
            Utils.checkNotNull(envelopes, "envelopes");
            this.envelopes = Optional.ofNullable(envelopes);
            return this;
        }

        /**
         * The summary list of envelopes associated with the workspace
         */
        public Builder envelopes(Optional<? extends List<WorkspaceEnvelopeSummary>> envelopes) {
            Utils.checkNotNull(envelopes, "envelopes");
            this.envelopes = envelopes;
            return this;
        }

        public GetWorkspaceEnvelopesResponse build() {

            return new GetWorkspaceEnvelopesResponse(
                envelopes);
        }

    }
}
