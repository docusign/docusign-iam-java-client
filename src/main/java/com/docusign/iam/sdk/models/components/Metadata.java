/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.components;

import com.docusign.iam.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * Metadata
 * 
 * <p>Additional metadata related to this workflow instance
 */
public class Metadata {
    /**
     * Identifier of the user who originally created the workflow definition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflow_created_by")
    private Optional<String> workflowCreatedBy;

    /**
     * Version string of the deployed workflow
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflow_version")
    private Optional<String> workflowVersion;

    /**
     * Identifier for workflow definition metadata in the system
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflow_metadata_id")
    private Optional<String> workflowMetadataId;

    @JsonCreator
    public Metadata(
            @JsonProperty("workflow_created_by") Optional<String> workflowCreatedBy,
            @JsonProperty("workflow_version") Optional<String> workflowVersion,
            @JsonProperty("workflow_metadata_id") Optional<String> workflowMetadataId) {
        Utils.checkNotNull(workflowCreatedBy, "workflowCreatedBy");
        Utils.checkNotNull(workflowVersion, "workflowVersion");
        Utils.checkNotNull(workflowMetadataId, "workflowMetadataId");
        this.workflowCreatedBy = workflowCreatedBy;
        this.workflowVersion = workflowVersion;
        this.workflowMetadataId = workflowMetadataId;
    }
    
    public Metadata() {
        this(Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * Identifier of the user who originally created the workflow definition
     */
    @JsonIgnore
    public Optional<String> workflowCreatedBy() {
        return workflowCreatedBy;
    }

    /**
     * Version string of the deployed workflow
     */
    @JsonIgnore
    public Optional<String> workflowVersion() {
        return workflowVersion;
    }

    /**
     * Identifier for workflow definition metadata in the system
     */
    @JsonIgnore
    public Optional<String> workflowMetadataId() {
        return workflowMetadataId;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Identifier of the user who originally created the workflow definition
     */
    public Metadata withWorkflowCreatedBy(String workflowCreatedBy) {
        Utils.checkNotNull(workflowCreatedBy, "workflowCreatedBy");
        this.workflowCreatedBy = Optional.ofNullable(workflowCreatedBy);
        return this;
    }


    /**
     * Identifier of the user who originally created the workflow definition
     */
    public Metadata withWorkflowCreatedBy(Optional<String> workflowCreatedBy) {
        Utils.checkNotNull(workflowCreatedBy, "workflowCreatedBy");
        this.workflowCreatedBy = workflowCreatedBy;
        return this;
    }

    /**
     * Version string of the deployed workflow
     */
    public Metadata withWorkflowVersion(String workflowVersion) {
        Utils.checkNotNull(workflowVersion, "workflowVersion");
        this.workflowVersion = Optional.ofNullable(workflowVersion);
        return this;
    }


    /**
     * Version string of the deployed workflow
     */
    public Metadata withWorkflowVersion(Optional<String> workflowVersion) {
        Utils.checkNotNull(workflowVersion, "workflowVersion");
        this.workflowVersion = workflowVersion;
        return this;
    }

    /**
     * Identifier for workflow definition metadata in the system
     */
    public Metadata withWorkflowMetadataId(String workflowMetadataId) {
        Utils.checkNotNull(workflowMetadataId, "workflowMetadataId");
        this.workflowMetadataId = Optional.ofNullable(workflowMetadataId);
        return this;
    }


    /**
     * Identifier for workflow definition metadata in the system
     */
    public Metadata withWorkflowMetadataId(Optional<String> workflowMetadataId) {
        Utils.checkNotNull(workflowMetadataId, "workflowMetadataId");
        this.workflowMetadataId = workflowMetadataId;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Metadata other = (Metadata) o;
        return 
            Utils.enhancedDeepEquals(this.workflowCreatedBy, other.workflowCreatedBy) &&
            Utils.enhancedDeepEquals(this.workflowVersion, other.workflowVersion) &&
            Utils.enhancedDeepEquals(this.workflowMetadataId, other.workflowMetadataId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            workflowCreatedBy, workflowVersion, workflowMetadataId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Metadata.class,
                "workflowCreatedBy", workflowCreatedBy,
                "workflowVersion", workflowVersion,
                "workflowMetadataId", workflowMetadataId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<String> workflowCreatedBy = Optional.empty();

        private Optional<String> workflowVersion = Optional.empty();

        private Optional<String> workflowMetadataId = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Identifier of the user who originally created the workflow definition
         */
        public Builder workflowCreatedBy(String workflowCreatedBy) {
            Utils.checkNotNull(workflowCreatedBy, "workflowCreatedBy");
            this.workflowCreatedBy = Optional.ofNullable(workflowCreatedBy);
            return this;
        }

        /**
         * Identifier of the user who originally created the workflow definition
         */
        public Builder workflowCreatedBy(Optional<String> workflowCreatedBy) {
            Utils.checkNotNull(workflowCreatedBy, "workflowCreatedBy");
            this.workflowCreatedBy = workflowCreatedBy;
            return this;
        }


        /**
         * Version string of the deployed workflow
         */
        public Builder workflowVersion(String workflowVersion) {
            Utils.checkNotNull(workflowVersion, "workflowVersion");
            this.workflowVersion = Optional.ofNullable(workflowVersion);
            return this;
        }

        /**
         * Version string of the deployed workflow
         */
        public Builder workflowVersion(Optional<String> workflowVersion) {
            Utils.checkNotNull(workflowVersion, "workflowVersion");
            this.workflowVersion = workflowVersion;
            return this;
        }


        /**
         * Identifier for workflow definition metadata in the system
         */
        public Builder workflowMetadataId(String workflowMetadataId) {
            Utils.checkNotNull(workflowMetadataId, "workflowMetadataId");
            this.workflowMetadataId = Optional.ofNullable(workflowMetadataId);
            return this;
        }

        /**
         * Identifier for workflow definition metadata in the system
         */
        public Builder workflowMetadataId(Optional<String> workflowMetadataId) {
            Utils.checkNotNull(workflowMetadataId, "workflowMetadataId");
            this.workflowMetadataId = workflowMetadataId;
            return this;
        }

        public Metadata build() {

            return new Metadata(
                workflowCreatedBy, workflowVersion, workflowMetadataId);
        }

    }
}
