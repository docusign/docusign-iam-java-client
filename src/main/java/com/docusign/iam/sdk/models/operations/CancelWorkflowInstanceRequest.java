/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.docusign.iam.sdk.models.operations;

import com.docusign.iam.sdk.utils.SpeakeasyMetadata;
import com.docusign.iam.sdk.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;

public class CancelWorkflowInstanceRequest {

    /**
     * The unique identifier of the account.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=accountId")
    private String accountId;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=workflowId")
    private String workflowId;

    /**
     * Unique identifier for the workflow instance
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=instanceId")
    private String instanceId;

    @JsonCreator
    public CancelWorkflowInstanceRequest(
            String accountId,
            String workflowId,
            String instanceId) {
        Utils.checkNotNull(accountId, "accountId");
        Utils.checkNotNull(workflowId, "workflowId");
        Utils.checkNotNull(instanceId, "instanceId");
        this.accountId = accountId;
        this.workflowId = workflowId;
        this.instanceId = instanceId;
    }

    /**
     * The unique identifier of the account.
     */
    @JsonIgnore
    public String accountId() {
        return accountId;
    }

    @JsonIgnore
    public String workflowId() {
        return workflowId;
    }

    /**
     * Unique identifier for the workflow instance
     */
    @JsonIgnore
    public String instanceId() {
        return instanceId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The unique identifier of the account.
     */
    public CancelWorkflowInstanceRequest withAccountId(String accountId) {
        Utils.checkNotNull(accountId, "accountId");
        this.accountId = accountId;
        return this;
    }

    public CancelWorkflowInstanceRequest withWorkflowId(String workflowId) {
        Utils.checkNotNull(workflowId, "workflowId");
        this.workflowId = workflowId;
        return this;
    }

    /**
     * Unique identifier for the workflow instance
     */
    public CancelWorkflowInstanceRequest withInstanceId(String instanceId) {
        Utils.checkNotNull(instanceId, "instanceId");
        this.instanceId = instanceId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CancelWorkflowInstanceRequest other = (CancelWorkflowInstanceRequest) o;
        return 
            Utils.enhancedDeepEquals(this.accountId, other.accountId) &&
            Utils.enhancedDeepEquals(this.workflowId, other.workflowId) &&
            Utils.enhancedDeepEquals(this.instanceId, other.instanceId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            accountId,
            workflowId,
            instanceId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CancelWorkflowInstanceRequest.class,
                "accountId", accountId,
                "workflowId", workflowId,
                "instanceId", instanceId);
    }
    
    public final static class Builder {
 
        private String accountId;
 
        private String workflowId;
 
        private String instanceId;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The unique identifier of the account.
         */
        public Builder accountId(String accountId) {
            Utils.checkNotNull(accountId, "accountId");
            this.accountId = accountId;
            return this;
        }

        public Builder workflowId(String workflowId) {
            Utils.checkNotNull(workflowId, "workflowId");
            this.workflowId = workflowId;
            return this;
        }

        /**
         * Unique identifier for the workflow instance
         */
        public Builder instanceId(String instanceId) {
            Utils.checkNotNull(instanceId, "instanceId");
            this.instanceId = instanceId;
            return this;
        }
        
        public CancelWorkflowInstanceRequest build() {
            return new CancelWorkflowInstanceRequest(
                accountId,
                workflowId,
                instanceId);
        }
    }
}
